#!/bin/bash

REPORT=$1
ERRORS=0

if grep -q "Final type has public constructor com.palantir.antipatterns.test.FinalClass" $REPORT; then
  echo "✅  Final class PASSED"
else
  echo "❌  Final class FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if grep -q "com\.palantir\.antipatterns\.test\.SimpleEnum" $REPORT; then
  echo "❌  Simple enum FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Simple enum PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.SubclassedEnum" $REPORT; then
  echo "❌  Subclassed enum FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Subclassed enum PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.PackageFinalClass" $REPORT; then
  echo "❌  Package final class FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Package final class PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.UtilityClass" $REPORT; then
  echo "❌  Utility class FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Utility class PASSED"
fi

if grep -q "com.palantir.antipatterns.test.IllegalSubclassOfConcreteType extends concrete type java.util.ArrayList" $REPORT; then
  echo "✅  Illegal subclass of concrete type PASSED"
else
  echo "❌  Illegal subclass of concrete type FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if grep -q "com\.palantir\.antipatterns\.test\.SubclassOfAbstractType" $REPORT; then
  echo "❌  Subclass of abstract type FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Subclass of abstract type PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.SubclassOfObject" $REPORT; then
  echo "❌  Subclass of Object FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Subclass of Object PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.SubclassOfThrowable" $REPORT; then
  echo "❌  Subclass of Throwable FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Subclass of Throwable PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.BasicInterface" $REPORT; then
  echo "❌  Basic interface FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Basic interface PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.ExtendingInterface" $REPORT; then
  echo "❌  Extending interface FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Extending interface PASSED"
fi

if grep -q "com.palantir.antipatterns.test.IllegalAbstractSubclassOfConcreteType extends concrete type java.util.ArrayList" $REPORT; then
  echo "✅  Illegal abstract subclass of concrete type PASSED"
else
  echo "❌  Illegal abstract subclass of concrete type FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if grep -q "Parameter 0 of com.palantir.antipatterns.test.FinalParameter.doSomething(FinalClass) is of final type com.palantir.antipatterns.test.FinalClass" $REPORT; then
  echo "✅  Final parameter PASSED"
else
  echo "❌  Final parameter FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if grep -q "com.palantir.antipatterns.test.FinalReturn.doSomething() returns final type com.palantir.antipatterns.test.FinalClass" $REPORT; then
  echo "✅  Final return PASSED"
else
  echo "❌  Final return FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if grep -q "com\.palantir\.antipatterns\.test\.IntegerParameter" $REPORT; then
  echo "❌  Integer parameter FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Integer parameter PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.IntegerReturn" $REPORT; then
  echo "❌  Integer return FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Integer return PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.StringParameter" $REPORT; then
  echo "❌  String parameter FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  String parameter PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.StringReturn" $REPORT; then
  echo "❌  String return FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  String return PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.EnumParameter" $REPORT; then
  echo "❌  Enum parameter FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Enum parameter PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.EnumReturn" $REPORT; then
  echo "❌  Enum return FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Enum return PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.PackageFinalParameter" $REPORT; then
  echo "❌  Package final parameter FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Package final parameter PASSED"
fi

if grep -q "com\.palantir\.antipatterns\.test\.PackageFinalReturn" $REPORT; then
  echo "❌  Package final return FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
else
  echo "✅  Package final return PASSED"
fi

if grep -q "Parameter 0 of com.palantir.antipatterns.test.ProtectedFinalParameter.doSomething(FinalClass) is of final type com.palantir.antipatterns.test.FinalClass" $REPORT; then
  echo "✅  Protected final parameter PASSED"
else
  echo "❌  Protected final parameter FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if grep -q "com.palantir.antipatterns.test.ProtectedFinalReturn.doSomething() returns final type com.palantir.antipatterns.test.FinalClass" $REPORT; then
  echo "✅  Protected final return PASSED"
else
  echo "❌  Protected final return FAILED" >&2
  ERRORS=$[ ERRORS + 1 ]
fi

if [[ $ERRORS != 0 ]]; then
  echo Error: $ERRORS tests failed >&2
  echo See $REPORT >&2
  exit 2
fi
exit 0
